library ieee; 
use ieee.std_logic_1164.all; 
use work.eecs361_gates.all; 

entity 8bitmux is
port (
control	: in std_logic (2 downto 0);
a : in std_logic;
b : in std_logic;
c : in std_logic;
d : in std_logic;
e : in std_logic;
f : in std_logic;
g : in std_logic;
h : in std_logic;
result : out std_logic;
);
end 8bitmux;

architecture structural of fulladder is 
signal bit0 : std_logic;
signal bit1 : std_logic;
signal bit2 : std_logic;
signal zero : std_logic;
signal one : std_logic;
signal two : std_logic;
signal three : std_logic;
signal four : std_logic;
signal five : std_logic;

begin
bit0_map : control(0) => bit0;
bit1_map : control(1) => bit1;
bit2_map : control(2) => bit2;
mux0_map : mux port map (sel => bit0, src0 => a, src1 => b, z => zero);
mux1_map : mux port map (sel => bit0, src0 => c, src1 => d, z => one);
mux2_map : mux port map (sel => bit0, src0 => e, src1 => f, z => two);
mux3_map : mux port map (sel => bit0, src0 => g, src1 => h, z => three);
mux4_map : mux port map (sel => bit1, src0 => zero, src1 => one, z => four);
mux5_map : mux port map (sel => bit1, src0 => two, src1 => three, z => five);
mux6_map : mux port map (sel => bit2, src0 => four, src1 => five, z => result);


